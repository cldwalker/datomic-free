#!/usr/bin/env bash
set -e

DATOMIC_FREE_HOME=$HOME/.datomic-free
DATOMIC_FREE=$DATOMIC_FREE_HOME/datomic-free-latest

get-latest-datomic-version () {
  curl -s http://downloads.datomic.com/free.html | grep -o 'datomic-free.*latest' |
    sed 's/datomic-free-\(.*\)\.zip.*$/\1/g'
}

# mostly from https://github.com/relevance/diametric/blob/master/script/vendor-datomic-free
download-and-link-datomic () {
  version="$1"

  echo "Downloading Datomic Free $version..."
  cd $DATOMIC_FREE_HOME
  curl --progress-bar -o datomic-free.zip "http://downloads.datomic.com/$version/datomic-free-$version.zip"
  unzip datomic-free.zip > /dev/null
  rm datomic-free.zip

  rm -f $DATOMIC_FREE
  ln -s "$DATOMIC_FREE_HOME/datomic-free-$version" $DATOMIC_FREE
  echo "Done. Datomic Free $version is now available."
}

update-datomic () {
  version="$1"

  if [ ! -d "$DATOMIC_FREE_HOME/datomic-free-$version" ]; then
    set +e
    curl -s --head "http://downloads.datomic.com/$version/datomic-free-$version.zip" | head -n 1 | grep -q 200
    grep_exit_status=$?
    set -e

    if [ "$grep_exit_status" = "0" ]; then
      download-and-link-datomic $version
    else
      echo \"$version\" is not a valid version. See http://downloads.datomic.com/free.html for a list of versions.
    fi

  else
    echo "Datomic Free $version is already present."
  fi

}

command="$1"
case "$command" in
"" | "-h" | "--help")
  echo "datomic-free [-h|--help] [start|update]"
  ;;
"start")
  cd $DATOMIC_FREE
  bin/transactor config/samples/free-transactor-template.properties
  ;;
"update")
  if [ "$2" != "" ]; then
    update-datomic $2
  else
    echo "Finding latest datomic version..."
    version=$(get-latest-datomic-version)

    if [ "$version" = "" ]; then
      echo "The latest version could not be found. Try passing a specific version to update."
    else
      update-datomic $version
    fi
  fi
  ;;
esac
